tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: AlienSG
  template_version: 0.1.0-SNAPSHOT
  template_author: admin

description: ""

imports:
  - org.alien4cloud.automation.cloudify.hostpool.service:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.hostpool.awsfeeder:1.4.0-SNAPSHOT
  - org.alien4cloud.samba:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.manager.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.manager.v4:1.4.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN14
  - org.alien4cloud.lang.java.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.jmx.jolokia:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.webapp:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.jdk.linux:1.4.0-SNAPSHOT
  - org.alien4cloud.storage.elasticsearch.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.nginx:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.hostpool.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.ansible:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.location_resources.cfy_byon:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.location:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.orchestrator.cfy:1.4.0-SNAPSHOT
  - org.alien4cloud.db.postgresql.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.consul:1.4.0-SNAPSHOT
  - org.alien4cloud.messaging.rabbitmq.pub:1.4.0-SNAPSHOT
  - alien-base-types:1.4.0

repositories:
  alien:
    url: https://fastconnect.org/maven/content/repositories/fastconnect/alien4cloud/alien4cloud-premium-dist/1.4.1.1
    type: http
  hostpool:
    url: https://fastconnect.org/maven/service/local/repositories/opensource/content/org/alien4cloud/cloudify-hostpool-service-pkg/1.0.0/
    type: http

topology_template:
  inputs:
    aws_access_key:
      type: string
      required: true
      description: "The aws access key of the account to use to start aws instances."
    aws_secret_key:
      type: string
      required: true
      description: "The aws secret key of the account to use to start aws instances."
  node_templates:
    OracleJDK:
      type: org.alien4cloud.lang.java.jdk.linux.nodes.OracleJDK
      properties:
        java_url: "http://34.240.158.14:8081/jdk-8u144-linux-x64.tar.gz"
        java_home: "/opt/java"
        component_version: "1.8.0-131-b11"
      requirements:
        - host:
            node: AlienCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    ConsulClient:
      type: org.alien4cloud.consul.nodes.ConsulClient
      properties:
        agent_mode: client
        download_url: "https://releases.hashicorp.com/consul/0.6.4/consul_0.6.4_linux_amd64.zip"
        data_dir: "/var/consul"
        tls_enabled: false
      requirements:
        - consul_server:
            node: ConsulServer
            capability: org.alien4cloud.consul.capabilities.ConsulServer
            relationship: org.alien4cloud.consul.relationships.JoinCluster
        - host:
            node: AlienCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        consul_agent:
          properties:
            api_port: 8500
    Alien4Cloud:
      type: org.alien4cloud.automation.a4c.webapp.nodes.Alien4Cloud
      properties:
        context_root: "/"
        component_version: "1.4.1"
        data_dir: "/opt/alien4cloud/data"
      requirements:
        - consul:
            node: ConsulClient
            capability: org.alien4cloud.consul.capabilities.ConsulAgent
            relationship: org.alien4cloud.consul.relationships.ConnectToConsulAgent
        - java:
            node: OracleJDK
            capability: org.alien4cloud.lang.java.pub.capabilities.JDK
            relationship: org.alien4cloud.lang.java.pub.relationships.JavaSoftwareHostedOnJDK
        - dependency:
            node: SambaClient
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
      capabilities:
        consul:
          properties:
            tls_enabled: false
        jolokia:
          properties:
            port: 8778
        http:
          properties:
            port: 9200
            protocol: http
            secure: false
            network_name: PRIVATE
            initiator: source
        rest:
          properties:
            user: admin
            password: admin
            port: 8080
            protocol: http
            secure: false
            network_name: PRIVATE
            initiator: source
      artifacts:
        alien_dist:
          file: alien4cloud-premium-dist-1.4.1.1-dist.tar.gz
          type: tosca.artifacts.File
          repository: alien
    ConsulServer:
      type: org.alien4cloud.consul.nodes.ConsulServer
      properties:
        agent_mode: server
        download_url: "https://releases.hashicorp.com/consul/0.6.4/consul_0.6.4_linux_amd64.zip"
        data_dir: "/var/consul"
        tls_enabled: false
      requirements:
        - host:
            node: ConsulCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        consul_agent:
          properties:
            api_port: 8500
    AlienCompute:
      type: tosca.nodes.Compute
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 10
            default_instances: 2
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    ConsulCompute:
      type: tosca.nodes.Compute
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    FrontCompute:
      type: tosca.nodes.Compute
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 10
            default_instances: 2
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    ConsulClient_2:
      type: org.alien4cloud.consul.nodes.ConsulClient
      properties:
        agent_mode: client
        download_url: "https://releases.hashicorp.com/consul/0.6.4/consul_0.6.4_linux_amd64.zip"
        data_dir: "/var/consul"
        tls_enabled: false
      requirements:
        - consul_server:
            node: ConsulServer
            capability: org.alien4cloud.consul.capabilities.ConsulServer
            relationship: org.alien4cloud.consul.relationships.JoinCluster
        - host:
            node: FrontCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        consul_agent:
          properties:
            api_port: 8500
    ConsulTemplate4Nginx:
      type: org.alien4cloud.nginx.nodes.ConsulTemplate4Nginx
      properties:
        download_url: "https://releases.hashicorp.com/consul-template/0.15.0/consul-template_0.15.0_linux_amd64.zip"
        listen_port: 80
        front_protocol: http
        target_protocol: http
      requirements:
        - consul:
            node: ConsulClient_2
            capability: org.alien4cloud.consul.capabilities.ConsulAgent
            relationship: org.alien4cloud.consul.relationships.ConnectToConsulAgent
        - host:
            node: FrontCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - dependency:
            node: Nginx
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
      capabilities:
        consul:
          properties:
            tls_enabled: false
    Nginx:
      type: org.alien4cloud.nginx.nodes.Nginx
      properties:
        listen_port: 80
        target_protocol: http
        front_protocol: http
      requirements:
        - host:
            node: FrontCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    SambaServer:
      type: org.alien4cloud.samba.nodes.SambaServer
      properties:
        share_name: ALIEN4CLOUD
        share_path: "/srv/samba/alien4cloud"
      requirements:
        - host:
            node: SambaCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    SambaClient:
      type: org.alien4cloud.samba.nodes.SambaClient
      properties:
        mount_point: "/var/alien4cloud"
      requirements:
        - host:
            node: AlienCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - smb_server:
            node: SambaServer
            capability: org.alien4cloud.samba.capabilities.SambaServer
            relationship: org.alien4cloud.samba.relationships.ConnectsToSambaServer
            properties:
              mount_point: "/var/alien4cloud"
    SambaCompute:
      type: tosca.nodes.Compute
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    CloudifyCompute:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            num_cpus: 2
            mem_size: "8 GIB"
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: centos
            version: 7.1
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    CloudifyManager:
      type: org.alien4cloud.automation.cloudify.manager.v4.nodes.CloudifyManager
      properties:
        ssh_user: "ec2-user"
        ssh_key_filename: "patrick-aws"
        agents_user: "ec2-user"
        component_version: "4.1.1"
      requirements:
        - host:
            node: CloudifyCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        rabbitmq_management:
          properties:
            user: cloudify
            password: c10udify
            protocol: http
            port: 15672
            secure: false
            network_name: PRIVATE
            initiator: source
        postgresql:
          properties:
            user: cloudify
            password: cloudify
            protocol: tcp
            port: 5432
            secure: false
            network_name: PRIVATE
            initiator: source
        diamond_collector:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        cloudify_api_v3:
          properties:
            admin_username: admin
            admin_password: admin
            protocol: https
            port: 443
            secure: false
            network_name: PRIVATE
            initiator: source
      artifacts:
        key_file:
          file: 
          type: tosca.artifacts.File
    CloudifyAwsConfiguration:
      type: org.alien4cloud.automation.cloudify.manager.v4.nodes.CloudifyAwsConfiguration
      properties:
        aws_access_key: { get_input: aws_access_key }
        aws_secret_key: { get_input: aws_secret_key }
        aws_region: "eu-west-1"
        agent_security_groups: "sg-cffd98b6"
      requirements:
        - cfy_manager:
            node: CloudifyManager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyManagerContainer
            relationship: tosca.relationships.HostedOn
    HostPool:
      type: org.alien4cloud.automation.cloudify.hostpool.service.nodes.HostPool
      properties:
        homedir: "/opt/cloudify-hostpool-service"
        user: cfyhostpool
        group: cfyhostpool
        data_path: "/opt/cloudify-hostpool-service-shared"
      requirements:
        - host:
            node: CloudifyCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        cloudify_hostpool:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
      artifacts:
        archive:
          file: cloudify-hostpool-service-pkg-1.0.0.tar.gz
          type: tosca.artifacts.File
          repository: hostpool
    Ansible4CloudifyManager:
      type: org.alien4cloud.automation.cloudify.ansible.nodes.Ansible4CloudifyManager
      properties:
        component_version: "2.0.1.0"
      requirements:
        - host:
            node: CloudifyCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    AWSHostpoolFeeder:
      type: org.alien4cloud.automation.cloudify.hostpool.awsfeeder.nodes.AWSHostpoolFeeder
      properties:
        aws_access_key: { get_input: aws_access_key }
        aws_secret_key: { get_input: aws_secret_key }
        key_name: "patrick-aws"
        key_content: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEAlvqjFbs3OXewtJJOIgrJMy0x8QBsyzU8RJMcJ7BsxGYJio7c7letnJ96fW/s
            SUwjRvEO4zLcmfkJ+bqGxINBWQ7zY6AmDLa6D3PJHhzU1NnqUTuq39enlGRS8M/6Vc6ZS2Q6wOxt
            ohEqoKa9nko8EMWbciBkklE8SMQljxG+Z+73jSWVbWylzrWbzJG0mCUNkNiBNUN9HGcK3Z4IbN1k
            Qzr7tl71awzukC4jRa2AMp1v0WkZZjUNJ+KM56aQ476P6B5+DtLZ9NIA52O5cMUOEs/P3UDseLwD
            s7NiyB6B2hvgCUf3UN304GmdHQEeeaGW1qMdyUsdNB3dOr8WeDYyqQIDAQABAoIBAHUjKqruoQ8e
            NOQ0axhwY+An3YqNeNtEh2jw9jQ45nqObDKrWvA06IcPGLr/vkS0JN6ioplV2eBAXyP5Oxx2dZoC
            RoXyN/M/RiY9ADozxlEKbYjvEUkwiV1RZSRfSGuQqlDbB9as2PaX+QnBtHZ+RBIDLvKh/UWkb3BJ
            dpaE/sSlZuOYxcwtYCpLplqanMndJEyN3nfP6TP+v505m2EkAToQihOziTRh785MtdlbF24lllYy
            90B/qLVrt1LmfrdMOQpIFF8zzCP5+9C2m4Bea7TuNN59TrbSyTzC4fGvAV0OQ5ksXabdslrrn202
            Or6LIM3h+hNVKBgmRfu8XBkiiH0CgYEA6G1htj/tdQv0Qm2T0Zj1Uu+4VWm3j+Q48UNeVYZ6KWQu
            zS2uK/IclKFjILfI3A4duCFuKLeZzCSTqgXcU8sCyQZN+GFY1mVPKateXtgthOCyyZ8pgoiqOVJF
            Ge3NSczt/hpNO+oIPfzCRhOC2Qm6GvSHtDSkBhN3R5aYndUXDNsCgYEApkqTtS72CHrM0zHYfKTN
            u4mEXeRgOarADutEK/DT4oRLBPDkE3piFFeAmemYfgN0vADUxlfDXpdpgY2I9eRIPRWi38rjeCFi
            3xM1GNPmt2mi+VHpiA4Euu5sGdsfgYcbUkF35A0A9NkufCn0Kg3xyckHwIibxnMkgxfhqFqMU8sC
            gYEArKaj0KeIEkwA819GUImYojTj7r6K1l4nVkA+0LUGBb0fbtYh7Q754AZKBkG++Ieb1+0tUR2h
            Jx18eu3DjpLczMrcHEbjoM68kS10+msG1Q+8fzy1rvspx06veeVFey65EuoiuQDNgo5BGaDgr6wk
            DGXccCYyOTk4f3sEfymM58UCgYAD5RVGlh3/HtkzTSST7sw+yz7FcDbswtoSv2HuYYqk8JJNQFMn
            PaOUdGQ3tqfys6QFT0OsjZuu2H8JIMaHc9xZSetxsG/ZfXayYOHKfhQWUawWiNueay2jLzhq9p3r
            S73RFGV5evB9y6RyFg14+rCiGEpNMSXs5P+C7olDhzNoNwKBgQC5qWRxA7uEqoDCJkIB5mHq22D1
            ndVyyet+g5I2v3HTtmNk2HhhJuegIZVIc9kvjmLZfg7+uUa1iV4Lf5OSZUZLVVugbnyYOLM2KR8i
            YBrS8Hl19Zb0hkf6AunpYKX2jlnXuQWTYRP+jGHGyc3FQlk8r6AEDMwy+afPEIvF8dz8jg==
            -----END RSA PRIVATE KEY-----

        region: "eu-west-1"
        instance_groups: "sg-3879e15c"
        instance_username: ubuntu
        instance_type: "t2.nano"
        instance_image: "ami-47a23a30"
        instance_count: 1
        host_per_instance: 1
        instance_name: HostpoolInstance
        instance_os: linux
      requirements:
        - host:
            node: CloudifyCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - hostpool:
            node: HostPool
            capability: org.alien4cloud.automation.cloudify.hostpool.pub.capabilities.HostPoolServiceApi
            relationship: org.alien4cloud.automation.cloudify.hostpool.awsfeeder.relationships.HostpoolFeederConnectToHostpool
    CfyOrchestratorConfigurator:
      type: org.alien4cloud.automation.a4c.config.orchestrator.cfy.nodes.CfyOrchestratorConfigurator
      properties:
        disableDiamondMonitorAgent: true
        name: MyOrchestrator
        discriminator: YourInitials
        pluginId: "alien-cloudify-4-orchestrator-premium"
        pluginBean: "cloudify-orchestrator"
      requirements:
        - cfy:
            node: CloudifyManager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyAPIv3
            relationship: org.alien4cloud.automation.a4c.config.orchestrator.cfy.relationships.ConnectsToCfy
        - host:
            node: Alien4Cloud
            capability: org.alien4cloud.automation.a4c.pub.capabilities.AlienConfigContainer
            relationship: org.alien4cloud.automation.a4c.pub.relationships.AlienConfiguratorHostedOnAlien
    ByonLocationResourcesConfigurator:
      type: org.alien4cloud.automation.a4c.config.location_resources.cfy_byon.nodes.ByonLocationResourcesConfigurator
      properties:
        type: byon
        resourceType: "alien.cloudify.byon.nodes.LinuxCompute"
        resourceName: MyResource
        resourceArchiveName: "cloudify-byon-types"
        resourceArchiveVersion: "1.4.0"
        resourceAgentInstallMethod: none
        name: MyLocation
      requirements:
        - hostpool:
            node: HostPool
            capability: org.alien4cloud.automation.cloudify.hostpool.pub.capabilities.HostPoolServiceApi
            relationship: org.alien4cloud.automation.a4c.config.location_resources.cfy_byon.LocationConnectsToHostpool
        - orchestrator:
            node: CfyOrchestratorConfigurator
            capability: org.alien4cloud.automation.a4c.config.pub.capabilities.OrchestratorConfigurator
            relationship: org.alien4cloud.automation.a4c.config.pub.relationships.LocationHostedOnOrchestrator
  workflows:
    install:
      steps:
        Compute_install:
          node: AlienCompute
          activity:
            delegate: install
          on-success:
            - SambaClient_initial
            - OracleJDK_initial
            - ConsulClient_initial
        OracleJDK_initial:
          node: OracleJDK
          activity:
            set_state: initial
          on-success:
            - OracleJDK_creating
        OracleJDK_creating:
          node: OracleJDK
          activity:
            set_state: creating
          on-success:
            - create_OracleJDK
        create_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - OracleJDK_created
        OracleJDK_created:
          node: OracleJDK
          activity:
            set_state: created
          on-success:
            - OracleJDK_configuring
        OracleJDK_configuring:
          node: OracleJDK
          activity:
            set_state: configuring
          on-success:
            - configure_OracleJDK
        configure_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - OracleJDK_configured
        OracleJDK_configured:
          node: OracleJDK
          activity:
            set_state: configured
          on-success:
            - OracleJDK_starting
        OracleJDK_starting:
          node: OracleJDK
          activity:
            set_state: starting
          on-success:
            - start_OracleJDK
        start_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - OracleJDK_started
        OracleJDK_started:
          node: OracleJDK
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_initial
        Alien4Cloud_initial:
          node: Alien4Cloud
          activity:
            set_state: initial
          on-success:
            - Alien4Cloud_creating
        Alien4Cloud_creating:
          node: Alien4Cloud
          activity:
            set_state: creating
          on-success:
            - create_Alien4Cloud
        create_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Alien4Cloud_created
        Alien4Cloud_created:
          node: Alien4Cloud
          activity:
            set_state: created
          on-success:
            - ConsulClient_configuring
            - SambaClient_configuring
            - Alien4Cloud_configuring
        Alien4Cloud_configuring:
          node: Alien4Cloud
          activity:
            set_state: configuring
          on-success:
            - configure_Alien4Cloud
        configure_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Alien4Cloud_configured
        Alien4Cloud_configured:
          node: Alien4Cloud
          activity:
            set_state: configured
          on-success:
            - Alien4Cloud_starting
        Alien4Cloud_starting:
          node: Alien4Cloud
          activity:
            set_state: starting
          on-success:
            - start_Alien4Cloud
        start_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Alien4Cloud_started
        Alien4Cloud_started:
          node: Alien4Cloud
          activity:
            set_state: started
          on-success:
            - CfyOrchestratorConfigurator_initial
        Compute_2_install:
          node: ConsulCompute
          activity:
            delegate: install
          on-success:
            - ConsulServer_initial
        ConsulServer_initial:
          node: ConsulServer
          activity:
            set_state: initial
          on-success:
            - ConsulServer_creating
        ConsulServer_creating:
          node: ConsulServer
          activity:
            set_state: creating
          on-success:
            - create_ConsulServer
        create_ConsulServer:
          node: ConsulServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ConsulServer_created
        ConsulServer_created:
          node: ConsulServer
          activity:
            set_state: created
          on-success:
            - ConsulServer_configuring
        ConsulServer_configuring:
          node: ConsulServer
          activity:
            set_state: configuring
          on-success:
            - configure_ConsulServer
        configure_ConsulServer:
          node: ConsulServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ConsulServer_configured
        ConsulServer_configured:
          node: ConsulServer
          activity:
            set_state: configured
          on-success:
            - ConsulServer_starting
        ConsulServer_starting:
          node: ConsulServer
          activity:
            set_state: starting
          on-success:
            - start_ConsulServer
        start_ConsulServer:
          node: ConsulServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ConsulServer_started
        ConsulServer_started:
          node: ConsulServer
          activity:
            set_state: started
          on-success:
            - ConsulClient_configuring
            - ConsulClient_2_configuring
        ConsulClient_initial:
          node: ConsulClient
          activity:
            set_state: initial
          on-success:
            - ConsulClient_creating
        ConsulClient_creating:
          node: ConsulClient
          activity:
            set_state: creating
          on-success:
            - create_ConsulClient
        create_ConsulClient:
          node: ConsulClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ConsulClient_created
        ConsulClient_created:
          node: ConsulClient
          activity:
            set_state: created
          on-success:
            - ConsulServer_configuring
            - ConsulClient_configuring
        ConsulClient_configuring:
          node: ConsulClient
          activity:
            set_state: configuring
          on-success:
            - configure_ConsulClient
        configure_ConsulClient:
          node: ConsulClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ConsulClient_configured
        ConsulClient_configured:
          node: ConsulClient
          activity:
            set_state: configured
          on-success:
            - ConsulClient_starting
        ConsulClient_starting:
          node: ConsulClient
          activity:
            set_state: starting
          on-success:
            - start_ConsulClient
        start_ConsulClient:
          node: ConsulClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ConsulClient_started
        ConsulClient_started:
          node: ConsulClient
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_configuring
        Compute_3_install:
          node: FrontCompute
          activity:
            delegate: install
          on-success:
            - ConsulClient_2_initial
            - ConsulTemplate4Nginx_initial
            - Nginx_initial
        ConsulClient_2_initial:
          node: ConsulClient_2
          activity:
            set_state: initial
          on-success:
            - ConsulClient_2_creating
        ConsulClient_2_creating:
          node: ConsulClient_2
          activity:
            set_state: creating
          on-success:
            - create_ConsulClient_2
        create_ConsulClient_2:
          node: ConsulClient_2
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ConsulClient_2_created
        ConsulClient_2_created:
          node: ConsulClient_2
          activity:
            set_state: created
          on-success:
            - ConsulServer_configuring
            - ConsulClient_2_configuring
        ConsulClient_2_configuring:
          node: ConsulClient_2
          activity:
            set_state: configuring
          on-success:
            - configure_ConsulClient_2
        configure_ConsulClient_2:
          node: ConsulClient_2
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ConsulClient_2_configured
        ConsulClient_2_configured:
          node: ConsulClient_2
          activity:
            set_state: configured
          on-success:
            - ConsulClient_2_starting
        ConsulClient_2_starting:
          node: ConsulClient_2
          activity:
            set_state: starting
          on-success:
            - start_ConsulClient_2
        start_ConsulClient_2:
          node: ConsulClient_2
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ConsulClient_2_started
        ConsulClient_2_started:
          node: ConsulClient_2
          activity:
            set_state: started
          on-success:
            - ConsulTemplate4Nginx_configuring
        ConsulTemplate4Nginx_initial:
          node: ConsulTemplate4Nginx
          activity:
            set_state: initial
          on-success:
            - ConsulTemplate4Nginx_creating
        ConsulTemplate4Nginx_creating:
          node: ConsulTemplate4Nginx
          activity:
            set_state: creating
          on-success:
            - create_ConsulTemplate4Nginx
        create_ConsulTemplate4Nginx:
          node: ConsulTemplate4Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ConsulTemplate4Nginx_created
        ConsulTemplate4Nginx_created:
          node: ConsulTemplate4Nginx
          activity:
            set_state: created
          on-success:
            - ConsulTemplate4Nginx_configuring
            - ConsulClient_2_configuring
            - Nginx_configuring
        ConsulTemplate4Nginx_configuring:
          node: ConsulTemplate4Nginx
          activity:
            set_state: configuring
          on-success:
            - configure_ConsulTemplate4Nginx
        configure_ConsulTemplate4Nginx:
          node: ConsulTemplate4Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ConsulTemplate4Nginx_configured
        ConsulTemplate4Nginx_configured:
          node: ConsulTemplate4Nginx
          activity:
            set_state: configured
          on-success:
            - ConsulTemplate4Nginx_starting
        ConsulTemplate4Nginx_starting:
          node: ConsulTemplate4Nginx
          activity:
            set_state: starting
          on-success:
            - start_ConsulTemplate4Nginx
        start_ConsulTemplate4Nginx:
          node: ConsulTemplate4Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ConsulTemplate4Nginx_started
        ConsulTemplate4Nginx_started:
          node: ConsulTemplate4Nginx
          activity:
            set_state: started
        Nginx_initial:
          node: Nginx
          activity:
            set_state: initial
          on-success:
            - Nginx_creating
        Nginx_creating:
          node: Nginx
          activity:
            set_state: creating
          on-success:
            - create_Nginx
        create_Nginx:
          node: Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Nginx_created
        Nginx_created:
          node: Nginx
          activity:
            set_state: created
          on-success:
            - Nginx_configuring
        Nginx_configuring:
          node: Nginx
          activity:
            set_state: configuring
          on-success:
            - configure_Nginx
        configure_Nginx:
          node: Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Nginx_configured
        Nginx_configured:
          node: Nginx
          activity:
            set_state: configured
          on-success:
            - Nginx_starting
        Nginx_starting:
          node: Nginx
          activity:
            set_state: starting
          on-success:
            - start_Nginx
        start_Nginx:
          node: Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Nginx_started
        Nginx_started:
          node: Nginx
          activity:
            set_state: started
          on-success:
            - ConsulTemplate4Nginx_configuring
        Compute_install_1:
          node: SambaCompute
          activity:
            delegate: install
          on-success:
            - SambaServer_initial
        SambaServer_initial:
          node: SambaServer
          activity:
            set_state: initial
          on-success:
            - SambaServer_creating
        SambaServer_creating:
          node: SambaServer
          activity:
            set_state: creating
          on-success:
            - create_SambaServer
        create_SambaServer:
          node: SambaServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - SambaServer_created
        SambaServer_created:
          node: SambaServer
          activity:
            set_state: created
          on-success:
            - SambaServer_configuring
        SambaServer_configuring:
          node: SambaServer
          activity:
            set_state: configuring
          on-success:
            - configure_SambaServer
        configure_SambaServer:
          node: SambaServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - SambaServer_configured
        SambaServer_configured:
          node: SambaServer
          activity:
            set_state: configured
          on-success:
            - SambaServer_starting
        SambaServer_starting:
          node: SambaServer
          activity:
            set_state: starting
          on-success:
            - start_SambaServer
        start_SambaServer:
          node: SambaServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - SambaServer_started
        SambaServer_started:
          node: SambaServer
          activity:
            set_state: started
          on-success:
            - SambaClient_configuring
        SambaClient_initial:
          node: SambaClient
          activity:
            set_state: initial
          on-success:
            - SambaClient_creating
        SambaClient_creating:
          node: SambaClient
          activity:
            set_state: creating
          on-success:
            - create_SambaClient
        create_SambaClient:
          node: SambaClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - SambaClient_created
        SambaClient_created:
          node: SambaClient
          activity:
            set_state: created
          on-success:
            - SambaClient_configuring
            - SambaServer_configuring
        SambaClient_configuring:
          node: SambaClient
          activity:
            set_state: configuring
          on-success:
            - configure_SambaClient
        configure_SambaClient:
          node: SambaClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - SambaClient_configured
        SambaClient_configured:
          node: SambaClient
          activity:
            set_state: configured
          on-success:
            - SambaClient_starting
        SambaClient_starting:
          node: SambaClient
          activity:
            set_state: starting
          on-success:
            - start_SambaClient
        start_SambaClient:
          node: SambaClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - SambaClient_started
        SambaClient_started:
          node: SambaClient
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_configuring
        Compute_install_2:
          node: CloudifyCompute
          activity:
            delegate: install
          on-success:
            - HostPool_initial
            - AWSHostpoolFeeder_initial
            - CloudifyManager_initial
            - Ansible4CloudifyManager_initial
        CloudifyManager_initial:
          node: CloudifyManager
          activity:
            set_state: initial
          on-success:
            - CloudifyManager_creating
        CloudifyManager_creating:
          node: CloudifyManager
          activity:
            set_state: creating
          on-success:
            - create_CloudifyManager
        create_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - CloudifyManager_created
        CloudifyManager_created:
          node: CloudifyManager
          activity:
            set_state: created
          on-success:
            - CloudifyManager_configuring
        CloudifyManager_configuring:
          node: CloudifyManager
          activity:
            set_state: configuring
          on-success:
            - configure_CloudifyManager
        configure_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - CloudifyManager_configured
        CloudifyManager_configured:
          node: CloudifyManager
          activity:
            set_state: configured
          on-success:
            - CloudifyManager_starting
        CloudifyManager_starting:
          node: CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_CloudifyManager
        start_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CloudifyManager_started
        CloudifyManager_started:
          node: CloudifyManager
          activity:
            set_state: started
          on-success:
            - CloudifyAwsConfiguration_initial
            - CfyOrchestratorConfigurator_configuring
        CloudifyAwsConfiguration_initial:
          node: CloudifyAwsConfiguration
          activity:
            set_state: initial
          on-success:
            - CloudifyAwsConfiguration_creating
        CloudifyAwsConfiguration_creating:
          node: CloudifyAwsConfiguration
          activity:
            set_state: creating
          on-success:
            - create_CloudifyAwsConfiguration
        create_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - CloudifyAwsConfiguration_created
        CloudifyAwsConfiguration_created:
          node: CloudifyAwsConfiguration
          activity:
            set_state: created
          on-success:
            - CloudifyAwsConfiguration_configuring
        CloudifyAwsConfiguration_configuring:
          node: CloudifyAwsConfiguration
          activity:
            set_state: configuring
          on-success:
            - configure_CloudifyAwsConfiguration
        configure_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - CloudifyAwsConfiguration_configured
        CloudifyAwsConfiguration_configured:
          node: CloudifyAwsConfiguration
          activity:
            set_state: configured
          on-success:
            - CloudifyAwsConfiguration_starting
        CloudifyAwsConfiguration_starting:
          node: CloudifyAwsConfiguration
          activity:
            set_state: starting
          on-success:
            - start_CloudifyAwsConfiguration
        start_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CloudifyAwsConfiguration_started
        CloudifyAwsConfiguration_started:
          node: CloudifyAwsConfiguration
          activity:
            set_state: started
        HostPool_initial:
          node: HostPool
          activity:
            set_state: initial
          on-success:
            - HostPool_creating
        HostPool_creating:
          node: HostPool
          activity:
            set_state: creating
          on-success:
            - create_HostPool
        create_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - HostPool_created
        HostPool_created:
          node: HostPool
          activity:
            set_state: created
          on-success:
            - HostPool_configuring
        HostPool_configuring:
          node: HostPool
          activity:
            set_state: configuring
          on-success:
            - configure_HostPool
        configure_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - HostPool_configured
        HostPool_configured:
          node: HostPool
          activity:
            set_state: configured
          on-success:
            - HostPool_starting
        HostPool_starting:
          node: HostPool
          activity:
            set_state: starting
          on-success:
            - start_HostPool
        start_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - HostPool_started
        HostPool_started:
          node: HostPool
          activity:
            set_state: started
          on-success:
            - ByonLocationResourcesConfigurator_configuring
            - AWSHostpoolFeeder_configuring
        Ansible4CloudifyManager_initial:
          node: Ansible4CloudifyManager
          activity:
            set_state: initial
          on-success:
            - Ansible4CloudifyManager_creating
        Ansible4CloudifyManager_creating:
          node: Ansible4CloudifyManager
          activity:
            set_state: creating
          on-success:
            - create_Ansible4CloudifyManager
        create_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Ansible4CloudifyManager_created
        Ansible4CloudifyManager_created:
          node: Ansible4CloudifyManager
          activity:
            set_state: created
          on-success:
            - Ansible4CloudifyManager_configuring
        Ansible4CloudifyManager_configuring:
          node: Ansible4CloudifyManager
          activity:
            set_state: configuring
          on-success:
            - configure_Ansible4CloudifyManager
        configure_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Ansible4CloudifyManager_configured
        Ansible4CloudifyManager_configured:
          node: Ansible4CloudifyManager
          activity:
            set_state: configured
          on-success:
            - Ansible4CloudifyManager_starting
        Ansible4CloudifyManager_starting:
          node: Ansible4CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_Ansible4CloudifyManager
        start_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Ansible4CloudifyManager_started
        Ansible4CloudifyManager_started:
          node: Ansible4CloudifyManager
          activity:
            set_state: started
        AWSHostpoolFeeder_initial:
          node: AWSHostpoolFeeder
          activity:
            set_state: initial
          on-success:
            - AWSHostpoolFeeder_creating
        AWSHostpoolFeeder_creating:
          node: AWSHostpoolFeeder
          activity:
            set_state: creating
          on-success:
            - AWSHostpoolFeeder_created
        AWSHostpoolFeeder_created:
          node: AWSHostpoolFeeder
          activity:
            set_state: created
          on-success:
            - HostPool_configuring
            - AWSHostpoolFeeder_configuring
        AWSHostpoolFeeder_configuring:
          node: AWSHostpoolFeeder
          activity:
            set_state: configuring
          on-success:
            - configure_AWSHostpoolFeeder
        configure_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - AWSHostpoolFeeder_configured
        AWSHostpoolFeeder_configured:
          node: AWSHostpoolFeeder
          activity:
            set_state: configured
          on-success:
            - AWSHostpoolFeeder_starting
        AWSHostpoolFeeder_starting:
          node: AWSHostpoolFeeder
          activity:
            set_state: starting
          on-success:
            - start_AWSHostpoolFeeder
        start_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AWSHostpoolFeeder_started
        AWSHostpoolFeeder_started:
          node: AWSHostpoolFeeder
          activity:
            set_state: started
        CfyOrchestratorConfigurator_initial:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: initial
          on-success:
            - CfyOrchestratorConfigurator_creating
        CfyOrchestratorConfigurator_creating:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: creating
          on-success:
            - CfyOrchestratorConfigurator_created
        CfyOrchestratorConfigurator_created:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: created
          on-success:
            - CloudifyManager_configuring
            - CfyOrchestratorConfigurator_configuring
        CfyOrchestratorConfigurator_configuring:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: configuring
          on-success:
            - configure_CfyOrchestratorConfigurator
        configure_CfyOrchestratorConfigurator:
          node: CfyOrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - CfyOrchestratorConfigurator_configured
        CfyOrchestratorConfigurator_configured:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: configured
          on-success:
            - CfyOrchestratorConfigurator_starting
        CfyOrchestratorConfigurator_starting:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: starting
          on-success:
            - start_CfyOrchestratorConfigurator
        start_CfyOrchestratorConfigurator:
          node: CfyOrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CfyOrchestratorConfigurator_started
        CfyOrchestratorConfigurator_started:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: started
          on-success:
            - ByonLocationResourcesConfigurator_initial
        ByonLocationResourcesConfigurator_initial:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: initial
          on-success:
            - ByonLocationResourcesConfigurator_creating
        ByonLocationResourcesConfigurator_creating:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: creating
          on-success:
            - create_ByonLocationResourcesConfigurator
        create_ByonLocationResourcesConfigurator:
          node: ByonLocationResourcesConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ByonLocationResourcesConfigurator_created
        ByonLocationResourcesConfigurator_created:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: created
          on-success:
            - HostPool_configuring
            - ByonLocationResourcesConfigurator_configuring
        ByonLocationResourcesConfigurator_configuring:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: configuring
          on-success:
            - configure_ByonLocationResourcesConfigurator
        configure_ByonLocationResourcesConfigurator:
          node: ByonLocationResourcesConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ByonLocationResourcesConfigurator_configured
        ByonLocationResourcesConfigurator_configured:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: configured
          on-success:
            - ByonLocationResourcesConfigurator_starting
        ByonLocationResourcesConfigurator_starting:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: starting
          on-success:
            - start_ByonLocationResourcesConfigurator
        start_ByonLocationResourcesConfigurator:
          node: ByonLocationResourcesConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ByonLocationResourcesConfigurator_started
        ByonLocationResourcesConfigurator_started:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: started
    uninstall:
      steps:
        Compute_uninstall:
          node: AlienCompute
          activity:
            delegate: uninstall
        OracleJDK_stopping:
          node: OracleJDK
          activity:
            set_state: stopping
          on-success:
            - stop_OracleJDK
        stop_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - OracleJDK_stopped
        OracleJDK_stopped:
          node: OracleJDK
          activity:
            set_state: stopped
          on-success:
            - OracleJDK_deleting
        OracleJDK_deleting:
          node: OracleJDK
          activity:
            set_state: deleting
          on-success:
            - delete_OracleJDK
        delete_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - OracleJDK_deleted
        OracleJDK_deleted:
          node: OracleJDK
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall
        Alien4Cloud_stopping:
          node: Alien4Cloud
          activity:
            set_state: stopping
          on-success:
            - stop_Alien4Cloud
        stop_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Alien4Cloud_stopped
        Alien4Cloud_stopped:
          node: Alien4Cloud
          activity:
            set_state: stopped
          on-success:
            - ConsulClient_stopping
            - SambaClient_stopping
            - Alien4Cloud_deleting
        Alien4Cloud_deleting:
          node: Alien4Cloud
          activity:
            set_state: deleting
          on-success:
            - delete_Alien4Cloud
        delete_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Alien4Cloud_deleted
        Alien4Cloud_deleted:
          node: Alien4Cloud
          activity:
            set_state: deleted
          on-success:
            - OracleJDK_stopping
        Compute_2_uninstall:
          node: ConsulCompute
          activity:
            delegate: uninstall
        ConsulServer_stopping:
          node: ConsulServer
          activity:
            set_state: stopping
          on-success:
            - stop_ConsulServer
        stop_ConsulServer:
          node: ConsulServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ConsulServer_stopped
        ConsulServer_stopped:
          node: ConsulServer
          activity:
            set_state: stopped
          on-success:
            - ConsulServer_deleting
        ConsulServer_deleting:
          node: ConsulServer
          activity:
            set_state: deleting
          on-success:
            - delete_ConsulServer
        delete_ConsulServer:
          node: ConsulServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ConsulServer_deleted
        ConsulServer_deleted:
          node: ConsulServer
          activity:
            set_state: deleted
          on-success:
            - Compute_2_uninstall
        ConsulClient_stopping:
          node: ConsulClient
          activity:
            set_state: stopping
          on-success:
            - stop_ConsulClient
        stop_ConsulClient:
          node: ConsulClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ConsulClient_stopped
        ConsulClient_stopped:
          node: ConsulClient
          activity:
            set_state: stopped
          on-success:
            - ConsulClient_deleting
            - ConsulServer_stopping
        ConsulClient_deleting:
          node: ConsulClient
          activity:
            set_state: deleting
          on-success:
            - delete_ConsulClient
        delete_ConsulClient:
          node: ConsulClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ConsulClient_deleted
        ConsulClient_deleted:
          node: ConsulClient
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall
        Compute_3_uninstall:
          node: FrontCompute
          activity:
            delegate: uninstall
        ConsulClient_2_stopping:
          node: ConsulClient_2
          activity:
            set_state: stopping
          on-success:
            - stop_ConsulClient_2
        stop_ConsulClient_2:
          node: ConsulClient_2
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ConsulClient_2_stopped
        ConsulClient_2_stopped:
          node: ConsulClient_2
          activity:
            set_state: stopped
          on-success:
            - ConsulServer_stopping
            - ConsulClient_2_deleting
        ConsulClient_2_deleting:
          node: ConsulClient_2
          activity:
            set_state: deleting
          on-success:
            - delete_ConsulClient_2
        delete_ConsulClient_2:
          node: ConsulClient_2
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ConsulClient_2_deleted
        ConsulClient_2_deleted:
          node: ConsulClient_2
          activity:
            set_state: deleted
          on-success:
            - Compute_3_uninstall
        ConsulTemplate4Nginx_stopping:
          node: ConsulTemplate4Nginx
          activity:
            set_state: stopping
          on-success:
            - stop_ConsulTemplate4Nginx
        stop_ConsulTemplate4Nginx:
          node: ConsulTemplate4Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ConsulTemplate4Nginx_stopped
        ConsulTemplate4Nginx_stopped:
          node: ConsulTemplate4Nginx
          activity:
            set_state: stopped
          on-success:
            - ConsulTemplate4Nginx_deleting
            - ConsulClient_2_stopping
            - Nginx_stopping
        ConsulTemplate4Nginx_deleting:
          node: ConsulTemplate4Nginx
          activity:
            set_state: deleting
          on-success:
            - delete_ConsulTemplate4Nginx
        delete_ConsulTemplate4Nginx:
          node: ConsulTemplate4Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ConsulTemplate4Nginx_deleted
        ConsulTemplate4Nginx_deleted:
          node: ConsulTemplate4Nginx
          activity:
            set_state: deleted
          on-success:
            - Compute_3_uninstall
        Nginx_stopping:
          node: Nginx
          activity:
            set_state: stopping
          on-success:
            - stop_Nginx
        stop_Nginx:
          node: Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Nginx_stopped
        Nginx_stopped:
          node: Nginx
          activity:
            set_state: stopped
          on-success:
            - Nginx_deleting
        Nginx_deleting:
          node: Nginx
          activity:
            set_state: deleting
          on-success:
            - delete_Nginx
        delete_Nginx:
          node: Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Nginx_deleted
        Nginx_deleted:
          node: Nginx
          activity:
            set_state: deleted
          on-success:
            - Compute_3_uninstall
        Compute_uninstall_1:
          node: SambaCompute
          activity:
            delegate: uninstall
        SambaServer_stopping:
          node: SambaServer
          activity:
            set_state: stopping
          on-success:
            - stop_SambaServer
        stop_SambaServer:
          node: SambaServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - SambaServer_stopped
        SambaServer_stopped:
          node: SambaServer
          activity:
            set_state: stopped
          on-success:
            - SambaServer_deleting
        SambaServer_deleting:
          node: SambaServer
          activity:
            set_state: deleting
          on-success:
            - delete_SambaServer
        delete_SambaServer:
          node: SambaServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - SambaServer_deleted
        SambaServer_deleted:
          node: SambaServer
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_1
        SambaClient_stopping:
          node: SambaClient
          activity:
            set_state: stopping
          on-success:
            - stop_SambaClient
        stop_SambaClient:
          node: SambaClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - SambaClient_stopped
        SambaClient_stopped:
          node: SambaClient
          activity:
            set_state: stopped
          on-success:
            - SambaClient_deleting
            - SambaServer_stopping
        SambaClient_deleting:
          node: SambaClient
          activity:
            set_state: deleting
          on-success:
            - delete_SambaClient
        delete_SambaClient:
          node: SambaClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - SambaClient_deleted
        SambaClient_deleted:
          node: SambaClient
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall
        Compute_uninstall_2:
          node: CloudifyCompute
          activity:
            delegate: uninstall
        CloudifyManager_stopping:
          node: CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_CloudifyManager
        stop_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CloudifyManager_stopped
        CloudifyManager_stopped:
          node: CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - CloudifyManager_deleting
        CloudifyManager_deleting:
          node: CloudifyManager
          activity:
            set_state: deleting
          on-success:
            - delete_CloudifyManager
        delete_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - CloudifyManager_deleted
        CloudifyManager_deleted:
          node: CloudifyManager
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_2
        CloudifyAwsConfiguration_stopping:
          node: CloudifyAwsConfiguration
          activity:
            set_state: stopping
          on-success:
            - stop_CloudifyAwsConfiguration
        stop_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CloudifyAwsConfiguration_stopped
        CloudifyAwsConfiguration_stopped:
          node: CloudifyAwsConfiguration
          activity:
            set_state: stopped
          on-success:
            - CloudifyAwsConfiguration_deleting
        CloudifyAwsConfiguration_deleting:
          node: CloudifyAwsConfiguration
          activity:
            set_state: deleting
          on-success:
            - delete_CloudifyAwsConfiguration
        delete_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - CloudifyAwsConfiguration_deleted
        CloudifyAwsConfiguration_deleted:
          node: CloudifyAwsConfiguration
          activity:
            set_state: deleted
          on-success:
            - CloudifyManager_stopping
        HostPool_stopping:
          node: HostPool
          activity:
            set_state: stopping
          on-success:
            - stop_HostPool
        stop_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - HostPool_stopped
        HostPool_stopped:
          node: HostPool
          activity:
            set_state: stopped
          on-success:
            - HostPool_deleting
        HostPool_deleting:
          node: HostPool
          activity:
            set_state: deleting
          on-success:
            - delete_HostPool
        delete_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - HostPool_deleted
        HostPool_deleted:
          node: HostPool
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_2
        Ansible4CloudifyManager_stopping:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_Ansible4CloudifyManager
        stop_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Ansible4CloudifyManager_stopped
        Ansible4CloudifyManager_stopped:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - Ansible4CloudifyManager_deleting
        Ansible4CloudifyManager_deleting:
          node: Ansible4CloudifyManager
          activity:
            set_state: deleting
          on-success:
            - delete_Ansible4CloudifyManager
        delete_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Ansible4CloudifyManager_deleted
        Ansible4CloudifyManager_deleted:
          node: Ansible4CloudifyManager
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_2
        AWSHostpoolFeeder_stopping:
          node: AWSHostpoolFeeder
          activity:
            set_state: stopping
          on-success:
            - stop_AWSHostpoolFeeder
        stop_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AWSHostpoolFeeder_stopped
        AWSHostpoolFeeder_stopped:
          node: AWSHostpoolFeeder
          activity:
            set_state: stopped
          on-success:
            - HostPool_stopping
            - AWSHostpoolFeeder_deleting
        AWSHostpoolFeeder_deleting:
          node: AWSHostpoolFeeder
          activity:
            set_state: deleting
          on-success:
            - delete_AWSHostpoolFeeder
        delete_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - AWSHostpoolFeeder_deleted
        AWSHostpoolFeeder_deleted:
          node: AWSHostpoolFeeder
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_2
        CfyOrchestratorConfigurator_stopping:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_CfyOrchestratorConfigurator
        stop_CfyOrchestratorConfigurator:
          node: CfyOrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CfyOrchestratorConfigurator_stopped
        CfyOrchestratorConfigurator_stopped:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: stopped
          on-success:
            - CfyOrchestratorConfigurator_deleting
            - CloudifyManager_stopping
        CfyOrchestratorConfigurator_deleting:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: deleting
          on-success:
            - delete_CfyOrchestratorConfigurator
        delete_CfyOrchestratorConfigurator:
          node: CfyOrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - CfyOrchestratorConfigurator_deleted
        CfyOrchestratorConfigurator_deleted:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: deleted
          on-success:
            - Alien4Cloud_stopping
        ByonLocationResourcesConfigurator_stopping:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_ByonLocationResourcesConfigurator
        stop_ByonLocationResourcesConfigurator:
          node: ByonLocationResourcesConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ByonLocationResourcesConfigurator_stopped
        ByonLocationResourcesConfigurator_stopped:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: stopped
          on-success:
            - ByonLocationResourcesConfigurator_deleting
            - HostPool_stopping
        ByonLocationResourcesConfigurator_deleting:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: deleting
          on-success:
            - delete_ByonLocationResourcesConfigurator
        delete_ByonLocationResourcesConfigurator:
          node: ByonLocationResourcesConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ByonLocationResourcesConfigurator_deleted
        ByonLocationResourcesConfigurator_deleted:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: deleted
          on-success:
            - CfyOrchestratorConfigurator_stopping
    start:
      steps:
        Compute_start:
          node: AlienCompute
          activity:
            delegate: start
          on-success:
            - ConsulClient_starting
            - OracleJDK_starting
            - SambaClient_starting
        OracleJDK_starting:
          node: OracleJDK
          activity:
            set_state: starting
          on-success:
            - start_OracleJDK
        start_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - OracleJDK_started
        OracleJDK_started:
          node: OracleJDK
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_starting
        Alien4Cloud_starting:
          node: Alien4Cloud
          activity:
            set_state: starting
          on-success:
            - start_Alien4Cloud
        start_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Alien4Cloud_started
        Alien4Cloud_started:
          node: Alien4Cloud
          activity:
            set_state: started
          on-success:
            - CfyOrchestratorConfigurator_starting
        Compute_2_start:
          node: ConsulCompute
          activity:
            delegate: start
          on-success:
            - ConsulServer_starting
        ConsulServer_starting:
          node: ConsulServer
          activity:
            set_state: starting
          on-success:
            - start_ConsulServer
        start_ConsulServer:
          node: ConsulServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ConsulServer_started
        ConsulServer_started:
          node: ConsulServer
          activity:
            set_state: started
          on-success:
            - ConsulClient_starting
            - ConsulClient_2_starting
        ConsulClient_starting:
          node: ConsulClient
          activity:
            set_state: starting
          on-success:
            - start_ConsulClient
        start_ConsulClient:
          node: ConsulClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ConsulClient_started
        ConsulClient_started:
          node: ConsulClient
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_starting
        Compute_3_start:
          node: FrontCompute
          activity:
            delegate: start
          on-success:
            - ConsulClient_2_starting
            - ConsulTemplate4Nginx_starting
            - Nginx_starting
        ConsulClient_2_starting:
          node: ConsulClient_2
          activity:
            set_state: starting
          on-success:
            - start_ConsulClient_2
        start_ConsulClient_2:
          node: ConsulClient_2
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ConsulClient_2_started
        ConsulClient_2_started:
          node: ConsulClient_2
          activity:
            set_state: started
          on-success:
            - ConsulTemplate4Nginx_starting
        ConsulTemplate4Nginx_starting:
          node: ConsulTemplate4Nginx
          activity:
            set_state: starting
          on-success:
            - start_ConsulTemplate4Nginx
        start_ConsulTemplate4Nginx:
          node: ConsulTemplate4Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ConsulTemplate4Nginx_started
        ConsulTemplate4Nginx_started:
          node: ConsulTemplate4Nginx
          activity:
            set_state: started
        Nginx_starting:
          node: Nginx
          activity:
            set_state: starting
          on-success:
            - start_Nginx
        start_Nginx:
          node: Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Nginx_started
        Nginx_started:
          node: Nginx
          activity:
            set_state: started
          on-success:
            - ConsulTemplate4Nginx_starting
        Compute_start_1:
          node: SambaCompute
          activity:
            delegate: start
          on-success:
            - SambaServer_starting
        SambaServer_starting:
          node: SambaServer
          activity:
            set_state: starting
          on-success:
            - start_SambaServer
        start_SambaServer:
          node: SambaServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - SambaServer_started
        SambaServer_started:
          node: SambaServer
          activity:
            set_state: started
          on-success:
            - SambaClient_starting
        SambaClient_starting:
          node: SambaClient
          activity:
            set_state: starting
          on-success:
            - start_SambaClient
        start_SambaClient:
          node: SambaClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - SambaClient_started
        SambaClient_started:
          node: SambaClient
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_starting
        Compute_start_2:
          node: CloudifyCompute
          activity:
            delegate: start
          on-success:
            - AWSHostpoolFeeder_starting
            - CloudifyManager_starting
            - Ansible4CloudifyManager_starting
            - HostPool_starting
        CloudifyManager_starting:
          node: CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_CloudifyManager
        start_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CloudifyManager_started
        CloudifyManager_started:
          node: CloudifyManager
          activity:
            set_state: started
          on-success:
            - CfyOrchestratorConfigurator_starting
            - CloudifyAwsConfiguration_starting
        CloudifyAwsConfiguration_starting:
          node: CloudifyAwsConfiguration
          activity:
            set_state: starting
          on-success:
            - start_CloudifyAwsConfiguration
        start_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CloudifyAwsConfiguration_started
        CloudifyAwsConfiguration_started:
          node: CloudifyAwsConfiguration
          activity:
            set_state: started
        HostPool_starting:
          node: HostPool
          activity:
            set_state: starting
          on-success:
            - start_HostPool
        start_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - HostPool_started
        HostPool_started:
          node: HostPool
          activity:
            set_state: started
          on-success:
            - AWSHostpoolFeeder_starting
            - ByonLocationResourcesConfigurator_starting
        Ansible4CloudifyManager_starting:
          node: Ansible4CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_Ansible4CloudifyManager
        start_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Ansible4CloudifyManager_started
        Ansible4CloudifyManager_started:
          node: Ansible4CloudifyManager
          activity:
            set_state: started
        AWSHostpoolFeeder_starting:
          node: AWSHostpoolFeeder
          activity:
            set_state: starting
          on-success:
            - start_AWSHostpoolFeeder
        start_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AWSHostpoolFeeder_started
        AWSHostpoolFeeder_started:
          node: AWSHostpoolFeeder
          activity:
            set_state: started
        CfyOrchestratorConfigurator_starting:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: starting
          on-success:
            - start_CfyOrchestratorConfigurator
        start_CfyOrchestratorConfigurator:
          node: CfyOrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CfyOrchestratorConfigurator_started
        CfyOrchestratorConfigurator_started:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: started
          on-success:
            - ByonLocationResourcesConfigurator_starting
        ByonLocationResourcesConfigurator_starting:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: starting
          on-success:
            - start_ByonLocationResourcesConfigurator
        start_ByonLocationResourcesConfigurator:
          node: ByonLocationResourcesConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ByonLocationResourcesConfigurator_started
        ByonLocationResourcesConfigurator_started:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: started
    stop:
      steps:
        Compute_stop:
          node: AlienCompute
          activity:
            delegate: stop
        OracleJDK_stopping:
          node: OracleJDK
          activity:
            set_state: stopping
          on-success:
            - stop_OracleJDK
        stop_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - OracleJDK_stopped
        OracleJDK_stopped:
          node: OracleJDK
          activity:
            set_state: stopped
          on-success:
            - Compute_stop
        Alien4Cloud_stopping:
          node: Alien4Cloud
          activity:
            set_state: stopping
          on-success:
            - stop_Alien4Cloud
        stop_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Alien4Cloud_stopped
        Alien4Cloud_stopped:
          node: Alien4Cloud
          activity:
            set_state: stopped
          on-success:
            - OracleJDK_stopping
        Compute_2_stop:
          node: ConsulCompute
          activity:
            delegate: stop
        ConsulServer_stopping:
          node: ConsulServer
          activity:
            set_state: stopping
          on-success:
            - stop_ConsulServer
        stop_ConsulServer:
          node: ConsulServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ConsulServer_stopped
        ConsulServer_stopped:
          node: ConsulServer
          activity:
            set_state: stopped
          on-success:
            - Compute_2_stop
        ConsulClient_stopping:
          node: ConsulClient
          activity:
            set_state: stopping
          on-success:
            - stop_ConsulClient
        stop_ConsulClient:
          node: ConsulClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ConsulClient_stopped
        ConsulClient_stopped:
          node: ConsulClient
          activity:
            set_state: stopped
          on-success:
            - Compute_stop
        Compute_3_stop:
          node: FrontCompute
          activity:
            delegate: stop
        ConsulClient_2_stopping:
          node: ConsulClient_2
          activity:
            set_state: stopping
          on-success:
            - stop_ConsulClient_2
        stop_ConsulClient_2:
          node: ConsulClient_2
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ConsulClient_2_stopped
        ConsulClient_2_stopped:
          node: ConsulClient_2
          activity:
            set_state: stopped
          on-success:
            - Compute_3_stop
        ConsulTemplate4Nginx_stopping:
          node: ConsulTemplate4Nginx
          activity:
            set_state: stopping
          on-success:
            - stop_ConsulTemplate4Nginx
        stop_ConsulTemplate4Nginx:
          node: ConsulTemplate4Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ConsulTemplate4Nginx_stopped
        ConsulTemplate4Nginx_stopped:
          node: ConsulTemplate4Nginx
          activity:
            set_state: stopped
          on-success:
            - Compute_3_stop
        Nginx_stopping:
          node: Nginx
          activity:
            set_state: stopping
          on-success:
            - stop_Nginx
        stop_Nginx:
          node: Nginx
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Nginx_stopped
        Nginx_stopped:
          node: Nginx
          activity:
            set_state: stopped
          on-success:
            - Compute_3_stop
        Compute_stop_1:
          node: SambaCompute
          activity:
            delegate: stop
        SambaServer_stopping:
          node: SambaServer
          activity:
            set_state: stopping
          on-success:
            - stop_SambaServer
        stop_SambaServer:
          node: SambaServer
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - SambaServer_stopped
        SambaServer_stopped:
          node: SambaServer
          activity:
            set_state: stopped
          on-success:
            - Compute_stop_1
        SambaClient_stopping:
          node: SambaClient
          activity:
            set_state: stopping
          on-success:
            - stop_SambaClient
        stop_SambaClient:
          node: SambaClient
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - SambaClient_stopped
        SambaClient_stopped:
          node: SambaClient
          activity:
            set_state: stopped
          on-success:
            - Compute_stop
        Compute_stop_2:
          node: CloudifyCompute
          activity:
            delegate: stop
        CloudifyManager_stopping:
          node: CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_CloudifyManager
        stop_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CloudifyManager_stopped
        CloudifyManager_stopped:
          node: CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - Compute_stop_2
        CloudifyAwsConfiguration_stopping:
          node: CloudifyAwsConfiguration
          activity:
            set_state: stopping
          on-success:
            - stop_CloudifyAwsConfiguration
        stop_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CloudifyAwsConfiguration_stopped
        CloudifyAwsConfiguration_stopped:
          node: CloudifyAwsConfiguration
          activity:
            set_state: stopped
          on-success:
            - CloudifyManager_stopping
        HostPool_stopping:
          node: HostPool
          activity:
            set_state: stopping
          on-success:
            - stop_HostPool
        stop_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - HostPool_stopped
        HostPool_stopped:
          node: HostPool
          activity:
            set_state: stopped
          on-success:
            - Compute_stop_2
        Ansible4CloudifyManager_stopping:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_Ansible4CloudifyManager
        stop_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Ansible4CloudifyManager_stopped
        Ansible4CloudifyManager_stopped:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - Compute_stop_2
        AWSHostpoolFeeder_stopping:
          node: AWSHostpoolFeeder
          activity:
            set_state: stopping
          on-success:
            - stop_AWSHostpoolFeeder
        stop_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AWSHostpoolFeeder_stopped
        AWSHostpoolFeeder_stopped:
          node: AWSHostpoolFeeder
          activity:
            set_state: stopped
          on-success:
            - Compute_stop_2
        CfyOrchestratorConfigurator_stopping:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_CfyOrchestratorConfigurator
        stop_CfyOrchestratorConfigurator:
          node: CfyOrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CfyOrchestratorConfigurator_stopped
        CfyOrchestratorConfigurator_stopped:
          node: CfyOrchestratorConfigurator
          activity:
            set_state: stopped
          on-success:
            - Alien4Cloud_stopping
        ByonLocationResourcesConfigurator_stopping:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_ByonLocationResourcesConfigurator
        stop_ByonLocationResourcesConfigurator:
          node: ByonLocationResourcesConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ByonLocationResourcesConfigurator_stopped
        ByonLocationResourcesConfigurator_stopped:
          node: ByonLocationResourcesConfigurator
          activity:
            set_state: stopped
          on-success:
            - CfyOrchestratorConfigurator_stopping
